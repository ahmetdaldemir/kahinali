name: Deploy to Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: 185.209.228.189
        username: root
        password: '@198711Ad@'
        port: 22
        script: |
          # Sistem güncellemesi
          apt update -y
          apt upgrade -y
          
          # Python 3.11 ve development tools kurulumu
          apt install -y python3.11 python3.11-venv python3.11-pip python3.11-dev
          apt install -y build-essential gcc g++ make
          apt install -y python3-dev python3-pip
          
          # Git kurulumu
          apt install -y git
          
          # PostgreSQL kurulumu ve konfigürasyonu
          apt install -y postgresql postgresql-contrib
          systemctl start postgresql
          systemctl enable postgresql
          
          # PostgreSQL kullanıcısını oluştur
          sudo -u postgres createuser --interactive --pwprompt laravel || true
          sudo -u postgres psql -c "ALTER USER laravel PASSWORD 'secret';"
          
          # TA-Lib kurulumu
          cd /tmp
          wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
          tar -xzf ta-lib-0.4.0-src.tar.gz
          cd ta-lib/
          ./configure --prefix=/usr
          make
          make install
          
          # Proje dizini oluşturma
          mkdir -p /var/www/html
          cd /var/www/html
          
          # Mevcut projeyi sil ve yeniden klonla
          rm -rf kahin
          git clone https://github.com/ahmetdaldemir/kahinali.git kahin
          cd kahin
          
          # Virtual environment oluştur
          python3.11 -m venv venv
          source venv/bin/activate
          
          # Bağımlılıkları yükle
          pip install --upgrade pip
          pip install wheel setuptools
          
          # TA-Lib'i önce kur
          pip install TA-Lib
          
          # Diğer bağımlılıkları yükle
          pip install -r requirements.txt
          
          # PostgreSQL konfigürasyonu
          sudo -u postgres psql -c "CREATE DATABASE kahin_ultima;"
          sudo -u postgres psql -c "CREATE USER laravel WITH PASSWORD 'secret';"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE kahin_ultima TO laravel;"
          sudo -u postgres psql -c "ALTER USER laravel CREATEDB;"
          
          # Gerekli dizinleri oluştur
          mkdir -p logs signals data models
          
          # Otomatik veritabanı migration'ı çalıştır
          echo "🚀 Veritabanı migration başlatılıyor..."
          source venv/bin/activate
          python3 database_migration.py
          
          # Migration başarısızsa tekrar dene
          if [ $? -ne 0 ]; then
            echo "❌ Migration başarısız, tekrar deneniyor..."
            sleep 5
            source venv/bin/activate
            python3 database_migration.py
          fi
          
          # Systemd service dosyalarını kopyala
          cp kahinali.service /etc/systemd/system/
          cp kahinali-web.service /etc/systemd/system/
          
          # Systemd'yi yeniden yükle
          systemctl daemon-reload
          
          # Servisleri etkinleştir ve başlat
          systemctl enable kahinali.service
          systemctl enable kahinali-web.service
          systemctl start kahinali.service
          systemctl start kahinali-web.service
          
          # Servis durumlarını kontrol et
          systemctl status kahinali.service
          systemctl status kahinali-web.service
          
          # Firewall ayarları
          ufw allow 5000
          ufw allow 22
          ufw --force enable
          
          # Veritabanı tablolarını kontrol et
          echo "📊 Veritabanı tabloları kontrol ediliyor..."
          sudo -u postgres psql -d kahin_ultima -c "\dt"
          sudo -u postgres psql -d kahin_ultima -c "SELECT COUNT(*) FROM signals;"
          
          echo "Deployment completed successfully!" 