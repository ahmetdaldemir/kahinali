import pickle
import numpy as np
from sklearn.ensemble import VotingClassifier
from sklearn.linear_model import LogisticRegression

# Basit ensemble model olu≈ütur
def create_simple_ensemble():
    print("Basit ensemble model olu≈üturuluyor...")
    
    # Mevcut modelleri y√ºkle
    try:
        with open('models/gb_model.pkl', 'rb') as f:
            gb_model = pickle.load(f)
        print("‚úì Gradient Boosting modeli y√ºklendi")
    except:
        print("‚úó Gradient Boosting modeli y√ºklenemedi")
        return False
    
    try:
        with open('models/rf_model.pkl', 'rb') as f:
            rf_model = pickle.load(f)
        print("‚úì Random Forest modeli y√ºklendi")
    except:
        print("‚úó Random Forest modeli y√ºklenemedi")
        return False
    
    # Basit ensemble olu≈ütur
    ensemble = VotingClassifier(
        estimators=[
            ('gb', gb_model),
            ('rf', rf_model)
        ],
        voting='soft'
    )
    
    # Kaydet
    with open('models/ensemble_model.pkl', 'wb') as f:
        pickle.dump(ensemble, f)
    
    print("‚úì Ensemble model kaydedildi")
    
    # Feature importance olu≈ütur
    feature_importance = {
        'gb_importance': gb_model.feature_importances_ if hasattr(gb_model, 'feature_importances_') else np.ones(125),
        'rf_importance': rf_model.feature_importances_ if hasattr(rf_model, 'feature_importances_') else np.ones(125)
    }
    
    with open('models/feature_importance.pkl', 'wb') as f:
        pickle.dump(feature_importance, f)
    
    print("‚úì Feature importance kaydedildi")
    
    # Feature selector olu≈ütur (basit)
    feature_selector = np.ones(125, dtype=bool)  # T√ºm featurelarƒ± kullan
    
    with open('models/feature_selector.pkl', 'wb') as f:
        pickle.dump(feature_selector, f)
    
    print("‚úì Feature selector kaydedildi")
    
    # Models dict olu≈ütur
    models_dict = {
        'ensemble': ensemble,
        'gb': gb_model,
        'rf': rf_model
    }
    
    with open('models/models.pkl', 'wb') as f:
        pickle.dump(models_dict, f)
    
    print("‚úì Models dict kaydedildi")
    
    return True

if __name__ == "__main__":
    success = create_simple_ensemble()
    if success:
        print("\nüéâ T√ºm modeller ba≈üarƒ±yla olu≈üturuldu!")
    else:
        print("\n‚ùå Hata olu≈ütu!") 