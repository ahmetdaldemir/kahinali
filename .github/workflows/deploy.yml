name: Deploy to Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: 185.209.228.189
        username: root
        password: '@198711Ad@'
        port: 22
        script: |
          # Sistem güncellemesi (CentOS/RHEL için)
          yum update -y
          
          # Gerekli paketleri kur (CentOS/RHEL için)
          yum install -y epel-release
          yum groupinstall -y "Development Tools"
          yum install -y python3 python3-pip python3-devel
          yum install -y git wget curl
          yum install -y postgresql postgresql-server postgresql-contrib
          yum install -y gcc gcc-c++ make
          
          # PostgreSQL'i başlat
          postgresql-setup initdb
          systemctl start postgresql
          systemctl enable postgresql
          
          # PostgreSQL kullanıcısını oluştur
          sudo -u postgres createuser --interactive --pwprompt laravel || true
          sudo -u postgres psql -c "ALTER USER laravel PASSWORD 'secret';"
          
          # Proje dizini oluşturma
          mkdir -p /var/www/html
          cd /var/www/html
          
          # Mevcut projeyi sil ve yeniden klonla
          rm -rf kahin
          git clone https://github.com/ahmetdaldemir/kahinali.git kahin
          cd kahin
          
          # Virtual environment oluştur
          python3 -m venv venv
          source venv/bin/activate
          
          # Bağımlılıkları yükle
          pip install --upgrade pip
          pip install wheel setuptools
          
          # TA-Lib yerine ta kullan (CentOS'ta TA-Lib sorunlu)
          pip install ta
          
          # Diğer bağımlılıkları yükle
          pip install -r requirements.txt
          
          # PostgreSQL konfigürasyonu
          sudo -u postgres psql -c "CREATE DATABASE kahin_ultima;"
          sudo -u postgres psql -c "CREATE USER laravel WITH PASSWORD 'secret';"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE kahin_ultima TO laravel;"
          sudo -u postgres psql -c "ALTER USER laravel CREATEDB;"
          
          # Gerekli dizinleri oluştur
          mkdir -p logs signals data models
          
          # Otomatik veritabanı migration'ı çalıştır
          echo "🚀 Veritabanı migration başlatılıyor..."
          source venv/bin/activate
          python3 database_migration.py
          
          # Migration başarısızsa zorla tablo oluştur
          if [ $? -ne 0 ]; then
            echo "❌ Migration başarısız, zorla tablo oluşturma deneniyor..."
            python3 force_create_tables.py
          fi
          
          # Manuel tablo oluşturma (ek güvenlik için)
          echo "🔄 Manuel tablo oluşturma çalıştırılıyor..."
          chmod +x manual_create_tables.sh
          ./manual_create_tables.sh
          
          # Systemd service dosyalarını kopyala
          cp kahinali.service /etc/systemd/system/
          cp kahinali-web.service /etc/systemd/system/
          
          # Systemd'yi yeniden yükle
          systemctl daemon-reload
          
          # Servisleri etkinleştir ve başlat
          systemctl enable kahinali.service
          systemctl enable kahinali-web.service
          systemctl start kahinali.service
          systemctl start kahinali-web.service
          
          # Servis durumlarını kontrol et
          systemctl status kahinali.service
          systemctl status kahinali-web.service
          
          # Firewall ayarları (CentOS/RHEL için)
          systemctl start firewalld
          systemctl enable firewalld
          firewall-cmd --permanent --add-port=5000/tcp
          firewall-cmd --permanent --add-port=22/tcp
          firewall-cmd --reload
          
          # Veritabanı tablolarını kontrol et
          echo "📊 Veritabanı tabloları kontrol ediliyor..."
          sudo -u postgres psql -d kahin_ultima -c "\dt"
          sudo -u postgres psql -d kahin_ultima -c "SELECT COUNT(*) FROM signals;"
          
          echo "Deployment completed successfully!" 